#!/usr/bin/env cram
# vim: set syntax=cram :

  $ . $TESTDIR/cram_strap.sh

Create a test datafile.

  $ PYTHONPATH=$TESTDIR/../  python $TESTDIR/mktestarray.py
  $ ls
  data.dat
  meta.json

Add metadata to the file:

  $ blpk compress --metadata meta.json data.dat
  $ blpk info data.dat.blp
  blpk: BloscpackHeader:
  blpk:     format_version: 3
  blpk:     offsets: True
  blpk:     metadata: True
  blpk:     checksum: 'adler32'
  blpk:     typesize: 8
  blpk:     chunk_size: 1.0M (1048576B)
  blpk:     last_chunk: 602.0K (616448B)
  blpk:     nchunks: 153
  blpk:     max_app_chunks: 1530
  blpk: 'offsets':
  blpk: \[14212,[1-9]\d*,[1-9]\d*,[1-9]\d*,[1-9]\d*,...\] (re)
  blpk: Metadata:
  blpk: {u?'container': u?'numpy', u?'dtype': u?"'<f8'", u?'order': u?'C', u?'shape': \[20000000\]} (re)
  blpk: MetadataHeader:
  blpk:     magic_format: b?'JSON' (re)
  blpk:     meta_options: '00000000'
  blpk:     meta_checksum: 'adler32'
  blpk:     meta_codec: 'zlib'
  blpk:     meta_level: 6
  blpk:     meta_size: 68.0B (68B)
  blpk:     max_meta_size: 680.0B (680B)
  blpk:     meta_comp_size: 6[2-5]\.0B \(6[2-5]B\) (re)
  blpk:     user_codec: b?'' (re)
  blpk: First chunk blosc header:
  blpk: OrderedDict([('version', 2), ('versionlz', 1), ('flags', 1), ('typesize', 8), ('nbytes', 1048576), ('blocksize', 524288), ('ctbytes', 191870)])
  blpk: First chunk blosc flags: 
  blpk: OrderedDict([('byte_shuffle', True), ('pure_memcpy', False), ('bit_shuffle', False), ('split_blocks', False), ('codec', 'blosclz')])
  $ blpk decompress data.dat.blp data.dat.dcmp
  blpk: Metadata:
  blpk: {u?'container': u?'numpy', u?'dtype': u?"'<f8'", u?'order': u?'C', u?'shape': \[20000000\]} (re)

Clean up:

  $ rm data.dat.blp data.dat.dcmp

Check that directory is clean.

  $ ls
  data.dat
  meta.json
